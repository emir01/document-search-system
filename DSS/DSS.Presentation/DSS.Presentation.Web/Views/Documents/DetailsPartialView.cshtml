@model DSS.Common.ViewModels.Documents.DocumentDetailsRenderViewModel

<div class="document-details-wrapper">
    @if (Model.EntityRetrieved)
    {
        <div class="row-fluid">
            <div class="span12 page-header">
                <h1>@Model.DisplayDocumentViewModel.Title</h1>
            </div>
        </div>

        <div class="row-fluid">
            <div class="span8">
                <div class="row-fluid">

                    <div class="span12">
                        <h3>Author :</h3>
                        <p>
                            @Model.DisplayDocumentViewModel.AuthorName
                        </p>
                    </div>
                </div>

                <div class="row-fluid">

                    <div class="span12">
                        <h3>Description :</h3>
                        <p>
                            @Model.DisplayDocumentViewModel.Description
                        </p>
                    </div>
                </div>

                <div class="row-fluid">
                    <div class="span12">

                        <div class="row-fluid">
                            <div class="span12">
                                <h3>Categories</h3>
                                <p>
                                    @foreach (var category in Model.DisplayDocumentViewModel.Categories)
                                    {
                                        <span class="badge badge-success document-details-category">
                                            <i class="icon-white icon-tag"></i>
                                            @(category)
                                        </span>
                                    }
                                </p>
                            </div>
                        </div>

                    </div>
                </div>

                <div class="row-fluid">
                    <div class="span12">
                        <div class="row-fluid">
                            <div class="span12">
                                <h3>Keywords</h3>
                                <p>
                                    @foreach (var keyword in Model.DisplayDocumentViewModel.Keywords)
                                    {
                                        <span class="badge badge-info document-details-keyword">
                                            <i class="icon-white icon-tag"></i>
                                            @(keyword)
                                        </span>
                                    }
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
                </div>

            @if (Model.Options.RenderStats)
            {
                <div class="span4 document-details-stats">
                    <div class="well">

                        <div class="row-fluid document-stat">
                            <span><i class="icon-user"></i><span class="stat-value">Uploaded User: @Model.DocumentStatsViewModel.UploadedUsername</span></span>
                        </div>

                        <div class="row-fluid document-stat">
                            <span><i class="icon-upload"></i><span class="stat-value">Date Uploaded: @Model.DocumentStatsViewModel.UploadDateString</span></span>

                        </div>

                        <div class="row-fluid document-stat">
                            <span><i class="icon-download"></i><span class="stat-value">Downloads: @Model.DocumentStatsViewModel.TotalDownloads</span></span>
                        </div>

                        <div class="row-fluid document-stat">
                            <span><i class="icon-plus"></i><span class="stat-value">Upvotes: @Model.DocumentStatsViewModel.TotalUpvotes</span></span>
                        </div>
                        <div class="row-fluid document-stat">
                            <span><i class="icon-minus"></i><span class="stat-value">Downvotes: @Model.DocumentStatsViewModel.TotalDownvotes</span></span>
                        </div>
                    </div>
                </div>
            }

        </div> 
    
            if (Model.Options.RenderDownload || Model.Options.RenderVoting)
            {
        <div class="row-fluid">
            <div class="span12">
                <div class="form-actions">

                    @if (Model.Options.RenderDownload)
                    {
                        <a data-document-id="@Model.DisplayDocumentViewModel.Id" href="@Url.Action("DownloadFile", "FileDownload", new { id = Model.DisplayDocumentViewModel.Id })" class="btn btn-primary download-file-link">
                            <i class="icon-download icon-white"></i>
                            Download!
                        </a>
                    }

                    @if (Model.Options.RenderVoting)
                    {
                        <button type="submit" class="btn btn-success document-upvote-button" data-document-id="@Model.DisplayDocumentViewModel.Id">
                            <i class="icon-white icon-arrow-up"></i>
                            Upvote
                        </button>

                        <button type="submit" class="btn btn-danger document-downvote-button" data-document-id="@Model.DisplayDocumentViewModel.Id">
                            <i class="icon-white icon-arrow-down"></i>
                            Downvote
                        </button>
                    }
                </div>
            </div>
        </div>
            }
    }
    else
    {
        <div class="row-fluid">
            <div class="span12 alert alert-error">
                <h4>@Model.RenderMessage</h4>
            </div>
        </div>
    }
</div>
